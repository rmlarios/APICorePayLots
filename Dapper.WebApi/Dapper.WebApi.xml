<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dapper.WebApi</name>
    </assembly>
    <members>
        <member name="M:Dapper.WebApi.Controllers.AsignacionController.GetAsignaciones">
            <summary>
            Listar Asignaciones
            </summary>    
            <returns>Lista de asignaciones con datos de saldo y abonos</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.AsignacionController.GetbyBenef(System.Int32)">
            <summary>
            Listar Asignaciones por Beneficiario
            </summary>
            <param name="id">Key del Beneficiario</param>
            <returns>Lista de asignaciones obtenidas</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.AsignacionController.GetDatosbyId(System.Int32)">
            <summary>
            Obtiene los datos de una Asignacion
            </summary>
            <param name="id">Key de la Asignacion a buscar</param>
            <returns>Datos de la asignacion</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.AsignacionController.PostAnular(Dapper.Application.DTOs.RequestModels.AnularAsignacionRequest)">
            <summary>
            Anular una Asignacion
            </summary>
            <param name="request">Key de la Asignacion a anular y Motivo de Anulación</param>
            <returns>Mensaje de confirmacion</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.GetAll">
            <summary>
            Lista todos los registros de la entidad
            </summary>
            <returns>Lista de registros</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.GetById(System.Int32)">
            <summary>
            Busca un registro basado en su Key
            </summary>
            <param name="id">Id a buscar</param>
            <returns>El registro buscado</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.PostCreate(`0)">
            <summary>
            Agrega un registro a la Base de Datos
            </summary>
            <param name="id"></param>
            <param name="entity">Clase con los valor a agregar</param>
            <returns>El registro creado</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.PutUpdate(System.Int32,`0)">
            <summary>
            Actualiza un registro de la Base de Datos
            </summary>
            <param name="id">Key del registro a actulizar</param>
            <param name="entity">Clase con los valores a actualizar</param>
            <returns>El registro actualizado</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.DeleteById(System.Int32)">
            <summary>
            Elimina un registro de la Base de Datos
            </summary>
            <param name="id">Key del registro a eliminar</param>
            <returns>Mensaje de confirmación de la acción</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BaseController`1.PostSave(`0,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.BloqueController.GetbyUbicaciones(System.Int32)">
            GET api/GetbyUbicaciones
            <summary>
            Obtiene los Bloques por Proyetco
            </summary>
            <param name="id">Id del proyecto a filtrar</param>
            <returns>Lista de Bloques filtrados</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.LoteController.GetLotes">
            GET api/GetbyUbicaciones
            <summary>
            Obtiene los Lotes registrados y su estado actual
            </summary>    
            <returns>Lista de Bloques filtrados</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.PagoController.GetListado(System.Boolean)">
            GET api/pago/GetListado
            <summary>
            Obtiene el listado de pagos segun algunas condiciones
            </summary>
            <param name="vigentes">Condicional para filtrar asignaciones vigentes</param>
            <returns>Listado de Pagos filtrados</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.PagoController.GetByAsignacion(System.Int32)">
            GET api/pago/GetByAsignacion
            <summary>
            Lista los pagos asociados a una Asignacion
            </summary>
            <param name="id">Key de la Asignacion a filtrar</param>
            <returns>Listado de Pagos filtrados por Asignacion</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.PagoController.GetPlanPago(System.Int32)">
            <summary>
            Genera el Plan de Pago de una Asignacion
            </summary>
            <param name="id">Key de la Asignacion</param>
            <returns>Plan de Pago de la Asignacion solicitada</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.PagoController.GetMesesPagar(System.Int32,System.Int32)">
            <summary>
            Lista los meses pendientes de pago e incluye el mes del pago cargado
            </summary>
            <param name="id">key de la Asignacion</param>
            <param name="idpago">key del pago</param>
            <returns>Datos de los meses a pagar</returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.PagoController.GetTicket(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">Id del Pago a Generar Ticket</param>
            <returns></returns>
        </member>
        <member name="M:Dapper.WebApi.Controllers.UbicacionController.GetUbicaciones">
            <summary>
            Lista los proyectos registrados con el detalle de Lotes
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
